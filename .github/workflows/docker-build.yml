name: Build and Push Docker Image for Raspberry Pi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:v0.12.0
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # ARM64 우선 빌드 (라즈베리파이용)
    - name: Build ARM64 for Raspberry Pi
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          simulsimul/turtlebot-auto:raspberry-pi
          simulsimul/turtlebot-auto:arm64-latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
    
    # AMD64 빌드 (개발/테스트용)
    - name: Build AMD64 for Development
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          simulsimul/turtlebot-auto:latest
          simulsimul/turtlebot-auto:amd64-latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
    
    # 멀티 아키텍처 매니페스트 생성
    - name: Create Multi-Arch Manifest
      if: github.event_name != 'pull_request'
      run: |
        docker buildx imagetools create -t simulsimul/turtlebot-auto:multi-arch \
          simulsimul/turtlebot-auto:amd64-latest \
          simulsimul/turtlebot-auto:arm64-latest
    
 